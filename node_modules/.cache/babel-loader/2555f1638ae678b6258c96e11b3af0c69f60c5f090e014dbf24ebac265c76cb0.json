{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\JFF-modeling and analysis\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, LogarithmicScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, LogarithmicScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [analysisParams, setAnalysisParams] = useState({\n    // Network Value Parameters\n    network_value_multiplier: 100,\n    n_users: 1000,\n    // AI Cost Parameters\n    base_cost_per_user: 0.1,\n    infrastructure_base: 1000,\n    infrastructure_scaling: 1.2,\n    // Revenue Model Parameters\n    pricing_model: 'freemium',\n    subscription_price: 10,\n    conversion_rate: 0.05,\n    usage_price: 0.01,\n    avg_usage_per_user: 100,\n    revenue_per_user: 0,\n    // Calculated revenue per user\n    total_revenue: 0,\n    // Total projected revenue\n\n    // Market Analysis Parameters\n    gdp: 1e12,\n    population: 1e8,\n    target_percentile: 50,\n    price_to_income_ratio: 0.01,\n    shape_parameter: 1.0,\n    // Growth Scenario Parameters\n    max_users: 100000,\n    months: 36\n  });\n  const [selectedGraph, setSelectedGraph] = useState('cost_structure');\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n  const chartRef = React.useRef(null);\n  useEffect(() => {\n    // Cleanup function for previous chart instance\n    if (chartRef.current) {\n      chartRef.current.destroy();\n    }\n    // Don't attempt to create a new chart if there are no results\n    if (!results) return;\n  }, [results]);\n\n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n      }\n    };\n  }, []);\n  const handleParamChange = (param, value) => {\n    setAnalysisParams(prev => ({\n      ...prev,\n      [param]: value\n    }));\n  };\n  const validateParams = () => {\n    if (selectedGraph === 'revenue_models') {\n      const {\n        pricing_model,\n        subscription_price,\n        conversion_rate,\n        usage_price,\n        avg_usage_per_user\n      } = analysisParams;\n      switch (pricing_model) {\n        case 'subscription':\n          if (subscription_price <= 0) {\n            throw new Error('Subscription price must be greater than 0');\n          }\n          break;\n        case 'usage_based':\n          if (usage_price <= 0 || avg_usage_per_user <= 0) {\n            throw new Error('Usage price and average usage must be greater than 0');\n          }\n          break;\n        case 'hybrid':\n          if (subscription_price <= 0 || usage_price <= 0 || avg_usage_per_user <= 0) {\n            throw new Error('All pricing parameters must be greater than 0 for hybrid model');\n          }\n          break;\n      }\n      if (conversion_rate <= 0 || conversion_rate > 1) {\n        throw new Error('Conversion rate must be between 0 and 1');\n      }\n    }\n  };\n  const runAnalysis = async () => {\n    try {\n      setError(null);\n\n      // Validate parameters before making API call\n      validateParams();\n      console.log('Sending analysis request with params:', {\n        analysisType: selectedGraph,\n        params: analysisParams\n      });\n      const response = await fetch('http://localhost:5000/api/analyze', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          analysisType: selectedGraph,\n          params: analysisParams\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('Received data:', data);\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      setResults(data);\n    } catch (error) {\n      console.error('Error in runAnalysis:', error);\n      setError(error.message);\n      setResults(null);\n    }\n  };\n  const renderInputs = () => {\n    switch (selectedGraph) {\n      case 'network_value':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"params-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Network Value Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Network Value Multiplier:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.network_value_multiplier,\n              onChange: e => handleParamChange('network_value_multiplier', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Number of Users:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.n_users,\n              onChange: e => handleParamChange('n_users', parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this);\n      case 'cost_structure':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"params-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Cost Structure Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Base Cost per User:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: analysisParams.base_cost_per_user,\n              onChange: e => handleParamChange('base_cost_per_user', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Infrastructure Base Cost:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.infrastructure_base,\n              onChange: e => handleParamChange('infrastructure_base', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Infrastructure Scaling:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.1\",\n              value: analysisParams.infrastructure_scaling,\n              onChange: e => handleParamChange('infrastructure_scaling', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this);\n      case 'revenue_models':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"params-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Revenue Model Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Pricing Model:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: analysisParams.pricing_model,\n              onChange: e => {\n                const newModel = e.target.value;\n                const baseParams = {\n                  pricing_model: newModel,\n                  revenue_per_user: 0,\n                  total_revenue: 0\n                };\n                switch (newModel) {\n                  case 'freemium':\n                    Object.assign(baseParams, {\n                      subscription_price: 10,\n                      conversion_rate: 0.05,\n                      usage_price: 0,\n                      avg_usage_per_user: 0,\n                      n_users: analysisParams.n_users || 1000 // Preserve or set default user count\n                    });\n                    break;\n                  case 'subscription':\n                    Object.assign(baseParams, {\n                      subscription_price: 10,\n                      conversion_rate: 1,\n                      usage_price: 0,\n                      avg_usage_per_user: 0,\n                      n_users: analysisParams.n_users || 1000\n                    });\n                    break;\n                  case 'usage_based':\n                    Object.assign(baseParams, {\n                      subscription_price: 0,\n                      conversion_rate: 1,\n                      usage_price: 0.01,\n                      avg_usage_per_user: 100,\n                      n_users: analysisParams.n_users || 1000\n                    });\n                    break;\n                  case 'hybrid':\n                    Object.assign(baseParams, {\n                      subscription_price: 5,\n                      conversion_rate: 0.1,\n                      usage_price: 0.005,\n                      avg_usage_per_user: 50,\n                      n_users: analysisParams.n_users || 1000\n                    });\n                    break;\n                  default:\n                    throw new Error('Invalid pricing model selected');\n                }\n\n                // Update all parameters at once to prevent intermediate invalid states\n                setAnalysisParams(prev => ({\n                  ...prev,\n                  ...baseParams\n                }));\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"freemium\",\n                children: \"Freemium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"subscription\",\n                children: \"Subscription\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"usage_based\",\n                children: \"Usage Based\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"hybrid\",\n                children: \"Hybrid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Subscription Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.subscription_price,\n              onChange: e => handleParamChange('subscription_price', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Conversion Rate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: analysisParams.conversion_rate,\n              onChange: e => handleParamChange('conversion_rate', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Usage Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: analysisParams.usage_price,\n              onChange: e => handleParamChange('usage_price', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Average Usage per User:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.avg_usage_per_user,\n              onChange: e => handleParamChange('avg_usage_per_user', parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this);\n      case 'market_pricing':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"params-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Market Analysis Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"GDP ($):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.gdp,\n              onChange: e => handleParamChange('gdp', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Population:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.population,\n              onChange: e => handleParamChange('population', parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Target Percentile:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"100\",\n              value: analysisParams.target_percentile,\n              onChange: e => handleParamChange('target_percentile', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [analysisParams.target_percentile, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Price to Income Ratio:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.001\",\n              value: analysisParams.price_to_income_ratio,\n              onChange: e => handleParamChange('price_to_income_ratio', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this);\n      case 'user_growth':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"params-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Growth Scenario Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Maximum Users:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.max_users,\n              onChange: e => handleParamChange('max_users', parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Months:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.months,\n              onChange: e => handleParamChange('months', parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fresco AI Value Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Graph Selection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Graph Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedGraph,\n              onChange: e => setSelectedGraph(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cost_structure\",\n                children: \"Cost Structure Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"network_value\",\n                children: \"Network Value Growth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"revenue_models\",\n                children: \"Revenue Models Comparison\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user_growth\",\n                children: \"User Growth Scenarios\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"market_pricing\",\n                children: \"Market Pricing Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), renderInputs(), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"run-button\",\n          onClick: runAnalysis,\n          children: \"Run Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container\",\n        children: results && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"graph\",\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              ref: chartRef,\n              data: {\n                labels: results.graphData.labels,\n                datasets: results.graphData.datasets.map(dataset => ({\n                  ...dataset,\n                  tension: 0.4,\n                  pointRadius: 2,\n                  borderWidth: 2\n                }))\n              },\n              options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                  title: {\n                    display: true,\n                    text: results.title,\n                    font: {\n                      size: 16\n                    }\n                  },\n                  legend: {\n                    position: 'top',\n                    labels: {\n                      usePointStyle: true\n                    }\n                  },\n                  tooltip: {\n                    mode: 'index',\n                    intersect: false\n                  }\n                },\n                scales: (() => {\n                  const baseConfig = {\n                    x: {\n                      display: true,\n                      grid: {\n                        display: false\n                      }\n                    },\n                    y: {\n                      display: true,\n                      position: 'left',\n                      beginAtZero: true\n                    }\n                  };\n                  switch (selectedGraph) {\n                    case 'market_pricing':\n                      return {\n                        ...baseConfig,\n                        x: {\n                          ...baseConfig.x,\n                          title: {\n                            display: true,\n                            text: 'Target Percentile'\n                          }\n                        },\n                        y: {\n                          ...baseConfig.y,\n                          title: {\n                            display: true,\n                            text: 'Revenue ($)'\n                          },\n                          ticks: {\n                            callback: value => '$' + value.toLocaleString()\n                          }\n                        }\n                      };\n                    case 'user_growth':\n                      return {\n                        ...baseConfig,\n                        x: {\n                          ...baseConfig.x,\n                          type: 'linear',\n                          title: {\n                            display: true,\n                            text: 'Months'\n                          }\n                        },\n                        y: {\n                          ...baseConfig.y,\n                          type: 'linear',\n                          title: {\n                            display: true,\n                            text: 'Users'\n                          },\n                          ticks: {\n                            callback: value => value.toLocaleString()\n                          }\n                        }\n                      };\n                    case 'cost_structure':\n                      return {\n                        ...baseConfig,\n                        x: {\n                          ...baseConfig.x,\n                          type: 'linear',\n                          title: {\n                            display: true,\n                            text: 'Users'\n                          }\n                        },\n                        y: {\n                          ...baseConfig.y,\n                          type: 'logarithmic',\n                          title: {\n                            display: true,\n                            text: 'Cost ($)'\n                          },\n                          ticks: {\n                            callback: value => '$' + value.toLocaleString()\n                          }\n                        }\n                      };\n                    case 'network_value':\n                      return {\n                        ...baseConfig,\n                        x: {\n                          ...baseConfig.x,\n                          type: 'linear',\n                          title: {\n                            display: true,\n                            text: 'Users'\n                          }\n                        },\n                        y: {\n                          ...baseConfig.y,\n                          type: 'linear',\n                          title: {\n                            display: true,\n                            text: 'Value ($)'\n                          },\n                          ticks: {\n                            callback: value => '$' + value.toLocaleString()\n                          }\n                        }\n                      };\n                    case 'revenue_models':\n                      return {\n                        ...baseConfig,\n                        x: {\n                          ...baseConfig.x,\n                          type: 'category',\n                          title: {\n                            display: true,\n                            text: 'Revenue Model'\n                          }\n                        },\n                        y: {\n                          ...baseConfig.y,\n                          type: 'linear',\n                          title: {\n                            display: true,\n                            text: 'Revenue ($)'\n                          },\n                          ticks: {\n                            callback: value => '$' + value.toLocaleString()\n                          }\n                        }\n                      };\n                    default:\n                      return baseConfig;\n                  }\n                })()\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"graph-description\",\n            children: (() => {\n              switch (selectedGraph) {\n                case 'cost_structure':\n                  return 'This model analyzes how costs scale with user growth, combining per-user costs and infrastructure overhead. The logarithmic scale shows the non-linear relationship between user base expansion and total costs.';\n                case 'network_value':\n                  return 'The network value model demonstrates how the platform\\'s total value grows with its user base. It incorporates network effects where each additional user increases the value for all existing users.';\n                case 'revenue_models':\n                  return 'Compare different revenue strategies: Freemium (free basic + premium features), Subscription (fixed recurring fee), Usage-based (pay-per-use), and Hybrid (combination). Each model\\'s effectiveness varies with user behavior and market positioning.';\n                case 'user_growth':\n                  return 'Visualize user acquisition scenarios over time, showing how different growth rates and market conditions affect the platform\\'s user base expansion.';\n                case 'market_pricing':\n                  return 'Analyze optimal pricing based on market demographics, showing revenue potential across different price points and target market segments.';\n                default:\n                  return '';\n              }\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 398,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eLG5CwzGuenCaFe1no7EvfUG+p0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Line","Chart","ChartJS","CategoryScale","LinearScale","LogarithmicScale","PointElement","LineElement","Title","Tooltip","Legend","React","useState","useEffect","jsxDEV","_jsxDEV","register","App","_s","analysisParams","setAnalysisParams","network_value_multiplier","n_users","base_cost_per_user","infrastructure_base","infrastructure_scaling","pricing_model","subscription_price","conversion_rate","usage_price","avg_usage_per_user","revenue_per_user","total_revenue","gdp","population","target_percentile","price_to_income_ratio","shape_parameter","max_users","months","selectedGraph","setSelectedGraph","results","setResults","error","setError","chartRef","useRef","current","destroy","handleParamChange","param","value","prev","validateParams","Error","runAnalysis","console","log","analysisType","params","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","status","data","json","message","renderInputs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","parseFloat","target","parseInt","step","newModel","baseParams","Object","assign","min","max","onClick","ref","labels","graphData","datasets","map","dataset","tension","pointRadius","borderWidth","options","responsive","maintainAspectRatio","plugins","title","display","font","size","legend","position","usePointStyle","tooltip","mode","intersect","scales","baseConfig","x","grid","y","beginAtZero","ticks","callback","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/JFF-modeling and analysis/src/App.js"],"sourcesContent":["import { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  LogarithmicScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  LogarithmicScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction App() {\r\n  const [analysisParams, setAnalysisParams] = useState({\r\n    // Network Value Parameters\r\n    network_value_multiplier: 100,\r\n    n_users: 1000,\r\n    \r\n    // AI Cost Parameters\r\n    base_cost_per_user: 0.1,\r\n    infrastructure_base: 1000,\r\n    infrastructure_scaling: 1.2,\r\n    \r\n    // Revenue Model Parameters\r\n    pricing_model: 'freemium',\r\n    subscription_price: 10,\r\n    conversion_rate: 0.05,\r\n    usage_price: 0.01,\r\n    avg_usage_per_user: 100,\r\n    revenue_per_user: 0,  // Calculated revenue per user\r\n    total_revenue: 0,     // Total projected revenue\r\n    \r\n    // Market Analysis Parameters\r\n    gdp: 1e12,\r\n    population: 1e8,\r\n    target_percentile: 50,\r\n    price_to_income_ratio: 0.01,\r\n    shape_parameter: 1.0,\r\n    \r\n    // Growth Scenario Parameters\r\n    max_users: 100000,\r\n    months: 36\r\n  });\r\n\r\n  const [selectedGraph, setSelectedGraph] = useState('cost_structure');\r\n  const [results, setResults] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const chartRef = React.useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Cleanup function for previous chart instance\r\n    if (chartRef.current) {\r\n      chartRef.current.destroy();\r\n    }\r\n    // Don't attempt to create a new chart if there are no results\r\n    if (!results) return;\r\n  }, [results]);\r\n\r\n  // Cleanup on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.destroy();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleParamChange = (param, value) => {\r\n    setAnalysisParams(prev => ({\r\n      ...prev,\r\n      [param]: value\r\n    }));\r\n  };\r\n\r\n  const validateParams = () => {\r\n    if (selectedGraph === 'revenue_models') {\r\n      const { pricing_model, subscription_price, conversion_rate, usage_price, avg_usage_per_user } = analysisParams;\r\n      \r\n      switch(pricing_model) {\r\n        case 'subscription':\r\n          if (subscription_price <= 0) {\r\n            throw new Error('Subscription price must be greater than 0');\r\n          }\r\n          break;\r\n        case 'usage_based':\r\n          if (usage_price <= 0 || avg_usage_per_user <= 0) {\r\n            throw new Error('Usage price and average usage must be greater than 0');\r\n          }\r\n          break;\r\n        case 'hybrid':\r\n          if (subscription_price <= 0 || usage_price <= 0 || avg_usage_per_user <= 0) {\r\n            throw new Error('All pricing parameters must be greater than 0 for hybrid model');\r\n          }\r\n          break;\r\n      }\r\n      \r\n      if (conversion_rate <= 0 || conversion_rate > 1) {\r\n        throw new Error('Conversion rate must be between 0 and 1');\r\n      }\r\n    }\r\n  };\r\n\r\n  const runAnalysis = async () => {\r\n    try {\r\n        setError(null);\r\n        \r\n        // Validate parameters before making API call\r\n        validateParams();\r\n        \r\n        console.log('Sending analysis request with params:', {\r\n            analysisType: selectedGraph,\r\n            params: analysisParams\r\n        });\r\n        \r\n        const response = await fetch('http://localhost:5000/api/analyze', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                analysisType: selectedGraph,\r\n                params: analysisParams\r\n            }),\r\n        });\r\n        \r\n        if (!response.ok) {\r\n            const errorText = await response.text();\r\n            throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('Received data:', data);\r\n        \r\n        if (data.error) {\r\n            throw new Error(data.error);\r\n        }\r\n        setResults(data);\r\n    } catch (error) {\r\n        console.error('Error in runAnalysis:', error);\r\n        setError(error.message);\r\n        setResults(null);\r\n    }\r\n};\r\n\r\n\r\n\r\n  const renderInputs = () => {\r\n    switch (selectedGraph) {\r\n      case 'network_value':\r\n        return (\r\n          <div className=\"params-group\">\r\n            <h3>Network Value Parameters</h3>\r\n            <div className=\"input-group\">\r\n              <label>Network Value Multiplier:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.network_value_multiplier}\r\n                onChange={(e) => handleParamChange('network_value_multiplier', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Number of Users:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.n_users}\r\n                onChange={(e) => handleParamChange('n_users', parseInt(e.target.value))}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'cost_structure':\r\n        return (\r\n          <div className=\"params-group\">\r\n            <h3>Cost Structure Parameters</h3>\r\n            <div className=\"input-group\">\r\n              <label>Base Cost per User:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={analysisParams.base_cost_per_user}\r\n                onChange={(e) => handleParamChange('base_cost_per_user', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Infrastructure Base Cost:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.infrastructure_base}\r\n                onChange={(e) => handleParamChange('infrastructure_base', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Infrastructure Scaling:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.1\"\r\n                value={analysisParams.infrastructure_scaling}\r\n                onChange={(e) => handleParamChange('infrastructure_scaling', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'revenue_models':\r\n        return (\r\n          <div className=\"params-group\">\r\n            <h3>Revenue Model Parameters</h3>\r\n            <div className=\"input-group\">\r\n              <label>Pricing Model:</label>\r\n              <select\r\n                value={analysisParams.pricing_model}\r\n                onChange={(e) => {\r\n                  const newModel = e.target.value;\r\n                  const baseParams = {\r\n                    pricing_model: newModel,\r\n                    revenue_per_user: 0,\r\n                    total_revenue: 0\r\n                  };\r\n                  \r\n                  switch(newModel) {\r\n                    case 'freemium':\r\n                      Object.assign(baseParams, {\r\n                        subscription_price: 10,\r\n                        conversion_rate: 0.05,\r\n                        usage_price: 0,\r\n                        avg_usage_per_user: 0,\r\n                        n_users: analysisParams.n_users || 1000 // Preserve or set default user count\r\n                      });\r\n                      break;\r\n                    case 'subscription':\r\n                      Object.assign(baseParams, {\r\n                        subscription_price: 10,\r\n                        conversion_rate: 1,\r\n                        usage_price: 0,\r\n                        avg_usage_per_user: 0,\r\n                        n_users: analysisParams.n_users || 1000\r\n                      });\r\n                      break;\r\n                    case 'usage_based':\r\n                      Object.assign(baseParams, {\r\n                        subscription_price: 0,\r\n                        conversion_rate: 1,\r\n                        usage_price: 0.01,\r\n                        avg_usage_per_user: 100,\r\n                        n_users: analysisParams.n_users || 1000\r\n                      });\r\n                      break;\r\n                    case 'hybrid':\r\n                      Object.assign(baseParams, {\r\n                        subscription_price: 5,\r\n                        conversion_rate: 0.1,\r\n                        usage_price: 0.005,\r\n                        avg_usage_per_user: 50,\r\n                        n_users: analysisParams.n_users || 1000\r\n                      });\r\n                      break;\r\n                    default:\r\n                      throw new Error('Invalid pricing model selected');\r\n                  }\r\n                  \r\n                  // Update all parameters at once to prevent intermediate invalid states\r\n                  setAnalysisParams(prev => ({\r\n                    ...prev,\r\n                    ...baseParams\r\n                  }));\r\n                }}\r\n              >\r\n                <option value=\"freemium\">Freemium</option>\r\n                <option value=\"subscription\">Subscription</option>\r\n                <option value=\"usage_based\">Usage Based</option>\r\n                <option value=\"hybrid\">Hybrid</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Subscription Price:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.subscription_price}\r\n                onChange={(e) => handleParamChange('subscription_price', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Conversion Rate:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={analysisParams.conversion_rate}\r\n                onChange={(e) => handleParamChange('conversion_rate', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Usage Price:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={analysisParams.usage_price}\r\n                onChange={(e) => handleParamChange('usage_price', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Average Usage per User:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.avg_usage_per_user}\r\n                onChange={(e) => handleParamChange('avg_usage_per_user', parseInt(e.target.value))}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'market_pricing':\r\n        return (\r\n          <div className=\"params-group\">\r\n            <h3>Market Analysis Parameters</h3>\r\n            <div className=\"input-group\">\r\n              <label>GDP ($):</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.gdp}\r\n                onChange={(e) => handleParamChange('gdp', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Population:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.population}\r\n                onChange={(e) => handleParamChange('population', parseInt(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Target Percentile:</label>\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                value={analysisParams.target_percentile}\r\n                onChange={(e) => handleParamChange('target_percentile', parseFloat(e.target.value))}\r\n              />\r\n              <span>{analysisParams.target_percentile}%</span>\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Price to Income Ratio:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.001\"\r\n                value={analysisParams.price_to_income_ratio}\r\n                onChange={(e) => handleParamChange('price_to_income_ratio', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'user_growth':\r\n        return (\r\n          <div className=\"params-group\">\r\n            <h3>Growth Scenario Parameters</h3>\r\n            <div className=\"input-group\">\r\n              <label>Maximum Users:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.max_users}\r\n                onChange={(e) => handleParamChange('max_users', parseInt(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Months:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.months}\r\n                onChange={(e) => handleParamChange('months', parseInt(e.target.value))}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Fresco AI Value Analysis</h1>\r\n      \r\n      <div className=\"main-container\">\r\n        <div className=\"controls-container\">\r\n          <div className=\"control-group\">\r\n            <h2>Graph Selection</h2>\r\n            <div className=\"input-group\">\r\n              <label>Select Graph Type:</label>\r\n              <select\r\n                value={selectedGraph}\r\n                onChange={(e) => setSelectedGraph(e.target.value)}\r\n              >\r\n                <option value=\"cost_structure\">Cost Structure Analysis</option>\r\n                <option value=\"network_value\">Network Value Growth</option>\r\n                <option value=\"revenue_models\">Revenue Models Comparison</option>\r\n                <option value=\"user_growth\">User Growth Scenarios</option>\r\n                <option value=\"market_pricing\">Market Pricing Analysis</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {renderInputs()}\r\n\r\n          <button className=\"run-button\" onClick={runAnalysis}>Run Analysis</button>\r\n          {error && (\r\n            <div className=\"error-message\">\r\n              Error: {error}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"graph-container\">\r\n          {results && (\r\n            <div className=\"graph-section\">\r\n              <div className=\"graph\">\r\n                <Line\r\n                ref={chartRef}\r\n                data={{\r\n                  labels: results.graphData.labels,\r\n                  datasets: results.graphData.datasets.map(dataset => ({\r\n                    ...dataset,\r\n                    tension: 0.4,\r\n                    pointRadius: 2,\r\n                    borderWidth: 2,\r\n                  }))\r\n                }}\r\n                options={{\r\n                  responsive: true,\r\n                  maintainAspectRatio: false,\r\n                  plugins: {\r\n                    title: {\r\n                      display: true,\r\n                      text: results.title,\r\n                      font: { size: 16 }\r\n                    },\r\n                    legend: {\r\n                      position: 'top',\r\n                      labels: { usePointStyle: true }\r\n                    },\r\n                    tooltip: {\r\n                      mode: 'index',\r\n                      intersect: false\r\n                    }\r\n                  },\r\n                  scales: (() => {\r\n                    const baseConfig = {\r\n                      x: {\r\n                        display: true,\r\n                        grid: { display: false }\r\n                      },\r\n                      y: {\r\n                        display: true,\r\n                        position: 'left',\r\n                        beginAtZero: true\r\n                      }\r\n                    };\r\n\r\n                    switch(selectedGraph) {\r\n                      case 'market_pricing':\r\n                        return {\r\n                          ...baseConfig,\r\n                          x: {\r\n                            ...baseConfig.x,\r\n                            title: {\r\n                              display: true,\r\n                              text: 'Target Percentile'\r\n                            }\r\n                          },\r\n                          y: {\r\n                            ...baseConfig.y,\r\n                            title: {\r\n                              display: true,\r\n                              text: 'Revenue ($)'\r\n                            },\r\n                            ticks: {\r\n                              callback: value => '$' + value.toLocaleString()\r\n                            }\r\n                          }\r\n                        };\r\n                      case 'user_growth':\r\n                        return {\r\n                          ...baseConfig,\r\n                          x: {\r\n                            ...baseConfig.x,\r\n                            type: 'linear',\r\n                            title: {\r\n                              display: true,\r\n                              text: 'Months'\r\n                            }\r\n                          },\r\n                          y: {\r\n                            ...baseConfig.y,\r\n                            type: 'linear',\r\n                            title: {\r\n                              display: true,\r\n                              text: 'Users'\r\n                            },\r\n                            ticks: {\r\n                              callback: value => value.toLocaleString()\r\n                            }\r\n                          }\r\n                        };\r\n                      case 'cost_structure':\r\n                        return {\r\n                          ...baseConfig,\r\n                          x: {\r\n                            ...baseConfig.x,\r\n                            type: 'linear',\r\n                            title: {\r\n                              display: true,\r\n                              text: 'Users'\r\n                            }\r\n                          },\r\n                          y: {\r\n                            ...baseConfig.y,\r\n                            type: 'logarithmic',\r\n                            title: {\r\n                              display: true,\r\n                              text: 'Cost ($)'\r\n                            },\r\n                            ticks: {\r\n                              callback: value => '$' + value.toLocaleString()\r\n                            }\r\n                          }\r\n                        };\r\n                      case 'network_value':\r\n                        return {\r\n                          ...baseConfig,\r\n                          x: {\r\n                            ...baseConfig.x,\r\n                            type: 'linear',\r\n                            title: {\r\n                              display: true,\r\n                              text: 'Users'\r\n                            }\r\n                          },\r\n                          y: {\r\n                            ...baseConfig.y,\r\n                            type: 'linear',\r\n                            title: {\r\n                              display: true,\r\n                              text: 'Value ($)'\r\n                            },\r\n                            ticks: {\r\n                              callback: value => '$' + value.toLocaleString()\r\n                            }\r\n                          }\r\n                        };\r\n                      case 'revenue_models':\r\n                        return {\r\n                          ...baseConfig,\r\n                          x: {\r\n                            ...baseConfig.x,\r\n                            type: 'category',\r\n                            title: {\r\n                              display: true,\r\n                              text: 'Revenue Model'\r\n                            }\r\n                          },\r\n                          y: {\r\n                            ...baseConfig.y,\r\n                            type: 'linear',\r\n                            title: {\r\n                              display: true,\r\n                              text: 'Revenue ($)'\r\n                            },\r\n                            ticks: {\r\n                              callback: value => '$' + value.toLocaleString()\r\n                            }\r\n                          }\r\n                        };\r\n                      default:\r\n                        return baseConfig;\r\n                    }\r\n                  })()\r\n                }}\r\n                />\r\n              </div>\r\n              <div className=\"graph-description\">\r\n                {(() => {\r\n                  switch(selectedGraph) {\r\n                    case 'cost_structure':\r\n                      return 'This model analyzes how costs scale with user growth, combining per-user costs and infrastructure overhead. The logarithmic scale shows the non-linear relationship between user base expansion and total costs.';\r\n                    case 'network_value':\r\n                      return 'The network value model demonstrates how the platform\\'s total value grows with its user base. It incorporates network effects where each additional user increases the value for all existing users.';\r\n                    case 'revenue_models':\r\n                      return 'Compare different revenue strategies: Freemium (free basic + premium features), Subscription (fixed recurring fee), Usage-based (pay-per-use), and Hybrid (combination). Each model\\'s effectiveness varies with user behavior and market positioning.';\r\n                    case 'user_growth':\r\n                      return 'Visualize user acquisition scenarios over time, showing how different growth rates and market conditions affect the platform\\'s user base expansion.';\r\n                    case 'market_pricing':\r\n                      return 'Analyze optimal pricing based on market demographics, showing revenue potential across different price points and target market segments.';\r\n                    default:\r\n                      return '';\r\n                  }\r\n                })()} \r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}