{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\JFF-modeling and analysis\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  var _results$recommended_, _results$target_incom, _results$market_size, _results$potential_re, _results$price_elasti;\n  const [analysisParams, setAnalysisParams] = useState({\n    n_users: 1000,\n    multiplier: 100,\n    cost_per_user: 0.1,\n    infrastructure_scaling: 1.2,\n    pricing_model: 'freemium',\n    subscription_price: 10,\n    conversion_rate: 0.05,\n    usage_price: 0.01,\n    avg_usage_per_user: 100,\n    gdp: 1e12,\n    population: 1e8,\n    target_percentile: 50\n  });\n  const [results, setResults] = useState(null);\n  const [selectedGraph, setSelectedGraph] = useState('revenue');\n  const handleParamChange = (param, value) => {\n    setAnalysisParams(prev => ({\n      ...prev,\n      [param]: value\n    }));\n  };\n  const fetchAnalysis = async analysisType => {\n    try {\n      const response = await fetch('/api/analyze', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          analysisType,\n          params: analysisParams\n        })\n      });\n      const data = await response.json();\n      setResults(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAnalysis('market_pricing');\n  }, [analysisParams]);\n  const getChartData = () => {\n    if (!results) return null;\n    switch (selectedGraph) {\n      case 'revenue':\n        return {\n          labels: ['Freemium', 'Subscription', 'Usage-based', 'Hybrid'],\n          datasets: [{\n            label: 'Revenue by Model',\n            data: [results.freemium_revenue, results.subscription_revenue, results.usage_based_revenue, results.hybrid_revenue],\n            backgroundColor: ['rgba(75, 192, 192, 0.2)'],\n            borderColor: ['rgba(75, 192, 192, 1)'],\n            borderWidth: 1\n          }]\n        };\n      case 'users':\n        return {\n          labels: ['Total Users', 'Paying Users'],\n          datasets: [{\n            label: 'User Distribution',\n            data: [results.total_users, results.paying_users],\n            backgroundColor: ['rgba(54, 162, 235, 0.2)', 'rgba(255, 99, 132, 0.2)'],\n            borderColor: ['rgba(54, 162, 235, 1)', 'rgba(255, 99, 132, 1)'],\n            borderWidth: 1\n          }]\n        };\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fresco AI Value Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Market Parameters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"GDP ($):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: analysisParams.gdp,\n            onChange: e => handleParamChange('gdp', parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Population:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: analysisParams.population,\n            onChange: e => handleParamChange('population', parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Target Percentile:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"100\",\n            value: analysisParams.target_percentile,\n            onChange: e => handleParamChange('target_percentile', parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [analysisParams.target_percentile, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pricing Parameters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Pricing Model:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: analysisParams.pricing_model,\n            onChange: e => handleParamChange('pricing_model', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"freemium\",\n              children: \"Freemium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"subscription\",\n              children: \"Subscription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"usage_based\",\n              children: \"Usage Based\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hybrid\",\n              children: \"Hybrid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Subscription Price ($):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: analysisParams.subscription_price,\n            onChange: e => handleParamChange('subscription_price', parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Conversion Rate (%):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"20\",\n            value: analysisParams.conversion_rate * 100,\n            onChange: e => handleParamChange('conversion_rate', parseFloat(e.target.value) / 100)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [(analysisParams.conversion_rate * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Market Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Recommended Price: $\", (_results$recommended_ = results.recommended_price) === null || _results$recommended_ === void 0 ? void 0 : _results$recommended_.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Target Income Level: $\", (_results$target_incom = results.target_income_level) === null || _results$target_incom === void 0 ? void 0 : _results$target_incom.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Market Size: \", (_results$market_size = results.market_size) === null || _results$market_size === void 0 ? void 0 : _results$market_size.toLocaleString(), \" users\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Potential Revenue: $\", (_results$potential_re = results.potential_revenue) === null || _results$potential_re === void 0 ? void 0 : _results$potential_re.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price Elasticity: \", (_results$price_elasti = results.price_elasticity) === null || _results$price_elasti === void 0 ? void 0 : _results$price_elasti.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedGraph,\n          onChange: e => setSelectedGraph(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"revenue\",\n            children: \"Revenue by Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"users\",\n            children: \"User Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph\",\n        children: [selectedGraph === 'revenue' && /*#__PURE__*/_jsxDEV(Bar, {\n          data: getChartData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), selectedGraph === 'users' && /*#__PURE__*/_jsxDEV(Pie, {\n          data: getChartData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K0+kQbReNYD5V+stH15fHmU7guM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","Bar","Pie","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","_results$recommended_","_results$target_incom","_results$market_size","_results$potential_re","_results$price_elasti","analysisParams","setAnalysisParams","n_users","multiplier","cost_per_user","infrastructure_scaling","pricing_model","subscription_price","conversion_rate","usage_price","avg_usage_per_user","gdp","population","target_percentile","results","setResults","selectedGraph","setSelectedGraph","handleParamChange","param","value","prev","fetchAnalysis","analysisType","response","fetch","method","headers","body","JSON","stringify","params","data","json","error","console","getChartData","labels","datasets","label","freemium_revenue","subscription_revenue","usage_based_revenue","hybrid_revenue","backgroundColor","borderColor","borderWidth","total_users","paying_users","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","parseFloat","target","parseInt","min","max","toFixed","recommended_price","target_income_level","market_size","toLocaleString","potential_revenue","price_elasticity","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/JFF-modeling and analysis/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar, Pie } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport './App.css';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction App() {\r\n  const [analysisParams, setAnalysisParams] = useState({\r\n    n_users: 1000,\r\n    multiplier: 100,\r\n    cost_per_user: 0.1,\r\n    infrastructure_scaling: 1.2,\r\n    pricing_model: 'freemium',\r\n    subscription_price: 10,\r\n    conversion_rate: 0.05,\r\n    usage_price: 0.01,\r\n    avg_usage_per_user: 100,\r\n    gdp: 1e12,\r\n    population: 1e8,\r\n    target_percentile: 50\r\n  });\r\n\r\n  const [results, setResults] = useState(null);\r\n  const [selectedGraph, setSelectedGraph] = useState('revenue');\r\n\r\n  const handleParamChange = (param, value) => {\r\n    setAnalysisParams(prev => ({\r\n      ...prev,\r\n      [param]: value\r\n    }));\r\n  };\r\n\r\n  const fetchAnalysis = async (analysisType) => {\r\n    try {\r\n      const response = await fetch('/api/analyze', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          analysisType,\r\n          params: analysisParams\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      setResults(data);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAnalysis('market_pricing');\r\n  }, [analysisParams]);\r\n\r\n  const getChartData = () => {\r\n    if (!results) return null;\r\n\r\n    switch (selectedGraph) {\r\n      case 'revenue':\r\n        return {\r\n          labels: ['Freemium', 'Subscription', 'Usage-based', 'Hybrid'],\r\n          datasets: [{\r\n            label: 'Revenue by Model',\r\n            data: [\r\n              results.freemium_revenue,\r\n              results.subscription_revenue,\r\n              results.usage_based_revenue,\r\n              results.hybrid_revenue\r\n            ],\r\n            backgroundColor: ['rgba(75, 192, 192, 0.2)'],\r\n            borderColor: ['rgba(75, 192, 192, 1)'],\r\n            borderWidth: 1\r\n          }]\r\n        };\r\n      case 'users':\r\n        return {\r\n          labels: ['Total Users', 'Paying Users'],\r\n          datasets: [{\r\n            label: 'User Distribution',\r\n            data: [results.total_users, results.paying_users],\r\n            backgroundColor: [\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 99, 132, 0.2)'\r\n            ],\r\n            borderColor: [\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 99, 132, 1)'\r\n            ],\r\n            borderWidth: 1\r\n          }]\r\n        };\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Fresco AI Value Analysis</h1>\r\n      \r\n      <div className=\"controls-container\">\r\n        <div className=\"control-group\">\r\n          <h2>Market Parameters</h2>\r\n          <div className=\"input-group\">\r\n            <label>GDP ($):</label>\r\n            <input\r\n              type=\"number\"\r\n              value={analysisParams.gdp}\r\n              onChange={(e) => handleParamChange('gdp', parseFloat(e.target.value))}\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Population:</label>\r\n            <input\r\n              type=\"number\"\r\n              value={analysisParams.population}\r\n              onChange={(e) => handleParamChange('population', parseInt(e.target.value))}\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Target Percentile:</label>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value={analysisParams.target_percentile}\r\n              onChange={(e) => handleParamChange('target_percentile', parseFloat(e.target.value))}\r\n            />\r\n            <span>{analysisParams.target_percentile}%</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"control-group\">\r\n          <h2>Pricing Parameters</h2>\r\n          <div className=\"input-group\">\r\n            <label>Pricing Model:</label>\r\n            <select\r\n              value={analysisParams.pricing_model}\r\n              onChange={(e) => handleParamChange('pricing_model', e.target.value)}\r\n            >\r\n              <option value=\"freemium\">Freemium</option>\r\n              <option value=\"subscription\">Subscription</option>\r\n              <option value=\"usage_based\">Usage Based</option>\r\n              <option value=\"hybrid\">Hybrid</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Subscription Price ($):</label>\r\n            <input\r\n              type=\"number\"\r\n              value={analysisParams.subscription_price}\r\n              onChange={(e) => handleParamChange('subscription_price', parseFloat(e.target.value))}\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Conversion Rate (%):</label>\r\n            <input\r\n              type=\"range\"\r\n              min=\"1\"\r\n              max=\"20\"\r\n              value={analysisParams.conversion_rate * 100}\r\n              onChange={(e) => handleParamChange('conversion_rate', parseFloat(e.target.value) / 100)}\r\n            />\r\n            <span>{(analysisParams.conversion_rate * 100).toFixed(1)}%</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {results && (\r\n        <div className=\"results-container\">\r\n          <div className=\"result-card\">\r\n            <h3>Market Analysis</h3>\r\n            <p>Recommended Price: ${results.recommended_price?.toFixed(2)}</p>\r\n            <p>Target Income Level: ${results.target_income_level?.toFixed(2)}</p>\r\n            <p>Market Size: {results.market_size?.toLocaleString()} users</p>\r\n            <p>Potential Revenue: ${results.potential_revenue?.toFixed(2)}</p>\r\n            <p>Price Elasticity: {results.price_elasticity?.toFixed(2)}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"graph-container\">\r\n        <h2>Visualization</h2>\r\n        <div className=\"graph-controls\">\r\n          <select\r\n            value={selectedGraph}\r\n            onChange={(e) => setSelectedGraph(e.target.value)}\r\n          >\r\n            <option value=\"revenue\">Revenue by Model</option>\r\n            <option value=\"users\">User Distribution</option>\r\n          </select>\r\n        </div>\r\n        \r\n        {results && (\r\n          <div className=\"graph\">\r\n            {selectedGraph === 'revenue' && (\r\n              <Bar data={getChartData()} />\r\n            )}\r\n            {selectedGraph === 'users' && (\r\n              <Pie data={getChartData()} />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAChD,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnBX,OAAO,CAACY,QAAQ,CACdX,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,qBAAA,EAAAC,oBAAA,EAAAC,qBAAA,EAAAC,qBAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC;IACnD4B,OAAO,EAAE,IAAI;IACbC,UAAU,EAAE,GAAG;IACfC,aAAa,EAAE,GAAG;IAClBC,sBAAsB,EAAE,GAAG;IAC3BC,aAAa,EAAE,UAAU;IACzBC,kBAAkB,EAAE,EAAE;IACtBC,eAAe,EAAE,IAAI;IACrBC,WAAW,EAAE,IAAI;IACjBC,kBAAkB,EAAE,GAAG;IACvBC,GAAG,EAAE,IAAI;IACTC,UAAU,EAAE,GAAG;IACfC,iBAAiB,EAAE;EACrB,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC0C,aAAa,EAAEC,gBAAgB,CAAC,GAAG3C,QAAQ,CAAC,SAAS,CAAC;EAE7D,MAAM4C,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC1CnB,iBAAiB,CAACoB,IAAI,KAAK;MACzB,GAAGA,IAAI;MACP,CAACF,KAAK,GAAGC;IACX,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,aAAa,GAAG,MAAOC,YAAY,IAAK;IAC5C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAE;QAC3CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBP,YAAY;UACZQ,MAAM,EAAE/B;QACV,CAAC;MACH,CAAC,CAAC;MACF,MAAMgC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClClB,UAAU,CAACiB,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED3D,SAAS,CAAC,MAAM;IACd+C,aAAa,CAAC,gBAAgB,CAAC;EACjC,CAAC,EAAE,CAACtB,cAAc,CAAC,CAAC;EAEpB,MAAMoC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACtB,OAAO,EAAE,OAAO,IAAI;IAEzB,QAAQE,aAAa;MACnB,KAAK,SAAS;QACZ,OAAO;UACLqB,MAAM,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE,aAAa,EAAE,QAAQ,CAAC;UAC7DC,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,kBAAkB;YACzBP,IAAI,EAAE,CACJlB,OAAO,CAAC0B,gBAAgB,EACxB1B,OAAO,CAAC2B,oBAAoB,EAC5B3B,OAAO,CAAC4B,mBAAmB,EAC3B5B,OAAO,CAAC6B,cAAc,CACvB;YACDC,eAAe,EAAE,CAAC,yBAAyB,CAAC;YAC5CC,WAAW,EAAE,CAAC,uBAAuB,CAAC;YACtCC,WAAW,EAAE;UACf,CAAC;QACH,CAAC;MACH,KAAK,OAAO;QACV,OAAO;UACLT,MAAM,EAAE,CAAC,aAAa,EAAE,cAAc,CAAC;UACvCC,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,mBAAmB;YAC1BP,IAAI,EAAE,CAAClB,OAAO,CAACiC,WAAW,EAAEjC,OAAO,CAACkC,YAAY,CAAC;YACjDJ,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,CAC1B;YACDC,WAAW,EAAE,CACX,uBAAuB,EACvB,uBAAuB,CACxB;YACDC,WAAW,EAAE;UACf,CAAC;QACH,CAAC;MACH;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,oBACEvD,OAAA;IAAK0D,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3D,OAAA;MAAA2D,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjC/D,OAAA;MAAK0D,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC3D,OAAA;QAAK0D,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B3D,OAAA;UAAA2D,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1B/D,OAAA;UAAK0D,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B3D,OAAA;YAAA2D,QAAA,EAAO;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvB/D,OAAA;YACEgE,IAAI,EAAC,QAAQ;YACbnC,KAAK,EAAEpB,cAAc,CAACW,GAAI;YAC1B6C,QAAQ,EAAGC,CAAC,IAAKvC,iBAAiB,CAAC,KAAK,EAAEwC,UAAU,CAACD,CAAC,CAACE,MAAM,CAACvC,KAAK,CAAC;UAAE;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN/D,OAAA;UAAK0D,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B3D,OAAA;YAAA2D,QAAA,EAAO;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1B/D,OAAA;YACEgE,IAAI,EAAC,QAAQ;YACbnC,KAAK,EAAEpB,cAAc,CAACY,UAAW;YACjC4C,QAAQ,EAAGC,CAAC,IAAKvC,iBAAiB,CAAC,YAAY,EAAE0C,QAAQ,CAACH,CAAC,CAACE,MAAM,CAACvC,KAAK,CAAC;UAAE;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN/D,OAAA;UAAK0D,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B3D,OAAA;YAAA2D,QAAA,EAAO;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACjC/D,OAAA;YACEgE,IAAI,EAAC,OAAO;YACZM,GAAG,EAAC,GAAG;YACPC,GAAG,EAAC,KAAK;YACT1C,KAAK,EAAEpB,cAAc,CAACa,iBAAkB;YACxC2C,QAAQ,EAAGC,CAAC,IAAKvC,iBAAiB,CAAC,mBAAmB,EAAEwC,UAAU,CAACD,CAAC,CAACE,MAAM,CAACvC,KAAK,CAAC;UAAE;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrF,CAAC,eACF/D,OAAA;YAAA2D,QAAA,GAAOlD,cAAc,CAACa,iBAAiB,EAAC,GAAC;UAAA;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN/D,OAAA;QAAK0D,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B3D,OAAA;UAAA2D,QAAA,EAAI;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3B/D,OAAA;UAAK0D,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B3D,OAAA;YAAA2D,QAAA,EAAO;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7B/D,OAAA;YACE6B,KAAK,EAAEpB,cAAc,CAACM,aAAc;YACpCkD,QAAQ,EAAGC,CAAC,IAAKvC,iBAAiB,CAAC,eAAe,EAAEuC,CAAC,CAACE,MAAM,CAACvC,KAAK,CAAE;YAAA8B,QAAA,gBAEpE3D,OAAA;cAAQ6B,KAAK,EAAC,UAAU;cAAA8B,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC1C/D,OAAA;cAAQ6B,KAAK,EAAC,cAAc;cAAA8B,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAClD/D,OAAA;cAAQ6B,KAAK,EAAC,aAAa;cAAA8B,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAChD/D,OAAA;cAAQ6B,KAAK,EAAC,QAAQ;cAAA8B,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN/D,OAAA;UAAK0D,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B3D,OAAA;YAAA2D,QAAA,EAAO;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtC/D,OAAA;YACEgE,IAAI,EAAC,QAAQ;YACbnC,KAAK,EAAEpB,cAAc,CAACO,kBAAmB;YACzCiD,QAAQ,EAAGC,CAAC,IAAKvC,iBAAiB,CAAC,oBAAoB,EAAEwC,UAAU,CAACD,CAAC,CAACE,MAAM,CAACvC,KAAK,CAAC;UAAE;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN/D,OAAA;UAAK0D,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B3D,OAAA;YAAA2D,QAAA,EAAO;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnC/D,OAAA;YACEgE,IAAI,EAAC,OAAO;YACZM,GAAG,EAAC,GAAG;YACPC,GAAG,EAAC,IAAI;YACR1C,KAAK,EAAEpB,cAAc,CAACQ,eAAe,GAAG,GAAI;YAC5CgD,QAAQ,EAAGC,CAAC,IAAKvC,iBAAiB,CAAC,iBAAiB,EAAEwC,UAAU,CAACD,CAAC,CAACE,MAAM,CAACvC,KAAK,CAAC,GAAG,GAAG;UAAE;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzF,CAAC,eACF/D,OAAA;YAAA2D,QAAA,GAAO,CAAClD,cAAc,CAACQ,eAAe,GAAG,GAAG,EAAEuD,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELxC,OAAO,iBACNvB,OAAA;MAAK0D,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChC3D,OAAA;QAAK0D,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B3D,OAAA;UAAA2D,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB/D,OAAA;UAAA2D,QAAA,GAAG,sBAAoB,GAAAvD,qBAAA,GAACmB,OAAO,CAACkD,iBAAiB,cAAArE,qBAAA,uBAAzBA,qBAAA,CAA2BoE,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClE/D,OAAA;UAAA2D,QAAA,GAAG,wBAAsB,GAAAtD,qBAAA,GAACkB,OAAO,CAACmD,mBAAmB,cAAArE,qBAAA,uBAA3BA,qBAAA,CAA6BmE,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtE/D,OAAA;UAAA2D,QAAA,GAAG,eAAa,GAAArD,oBAAA,GAACiB,OAAO,CAACoD,WAAW,cAAArE,oBAAA,uBAAnBA,oBAAA,CAAqBsE,cAAc,CAAC,CAAC,EAAC,QAAM;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjE/D,OAAA;UAAA2D,QAAA,GAAG,sBAAoB,GAAApD,qBAAA,GAACgB,OAAO,CAACsD,iBAAiB,cAAAtE,qBAAA,uBAAzBA,qBAAA,CAA2BiE,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClE/D,OAAA;UAAA2D,QAAA,GAAG,oBAAkB,GAAAnD,qBAAA,GAACe,OAAO,CAACuD,gBAAgB,cAAAtE,qBAAA,uBAAxBA,qBAAA,CAA0BgE,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAED/D,OAAA;MAAK0D,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B3D,OAAA;QAAA2D,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB/D,OAAA;QAAK0D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7B3D,OAAA;UACE6B,KAAK,EAAEJ,aAAc;UACrBwC,QAAQ,EAAGC,CAAC,IAAKxC,gBAAgB,CAACwC,CAAC,CAACE,MAAM,CAACvC,KAAK,CAAE;UAAA8B,QAAA,gBAElD3D,OAAA;YAAQ6B,KAAK,EAAC,SAAS;YAAA8B,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjD/D,OAAA;YAAQ6B,KAAK,EAAC,OAAO;YAAA8B,QAAA,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELxC,OAAO,iBACNvB,OAAA;QAAK0D,SAAS,EAAC,OAAO;QAAAC,QAAA,GACnBlC,aAAa,KAAK,SAAS,iBAC1BzB,OAAA,CAACd,GAAG;UAACuD,IAAI,EAAEI,YAAY,CAAC;QAAE;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC7B,EACAtC,aAAa,KAAK,OAAO,iBACxBzB,OAAA,CAACb,GAAG;UAACsD,IAAI,EAAEI,YAAY,CAAC;QAAE;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC7B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5D,EAAA,CAzMQD,GAAG;AAAA6E,EAAA,GAAH7E,GAAG;AA2MZ,eAAeA,GAAG;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}