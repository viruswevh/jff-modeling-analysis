{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\JFF-modeling and analysis\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [analysisParams, setAnalysisParams] = useState({\n    n_users: 1000,\n    multiplier: 100,\n    cost_per_user: 0.1,\n    infrastructure_scaling: 1.2,\n    pricing_model: 'freemium',\n    subscription_price: 10,\n    conversion_rate: 0.05,\n    usage_price: 0.01,\n    avg_usage_per_user: 100,\n    gdp: 1e12,\n    population: 1e8,\n    target_percentile: 50,\n    months: 36,\n    max_users: 100000\n  });\n  const [results, setResults] = useState(null);\n  const [selectedGraph, setSelectedGraph] = useState('cost_structure');\n  const handleParamChange = (param, value) => {\n    setAnalysisParams(prev => ({\n      ...prev,\n      [param]: value\n    }));\n  };\n  const fetchAnalysis = async analysisType => {\n    try {\n      const response = await fetch('/api/analyze', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          analysisType,\n          params: analysisParams\n        })\n      });\n      const data = await response.json();\n      setResults(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAnalysis(selectedGraph);\n  }, [analysisParams, selectedGraph]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fresco AI Value Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Graph Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Graph Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedGraph,\n            onChange: e => setSelectedGraph(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cost_structure\",\n              children: \"Cost Structure Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"network_value\",\n              children: \"Network Value Growth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"revenue_models\",\n              children: \"Revenue Models Comparison\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"user_growth\",\n              children: \"User Growth Scenarios\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"market_pricing\",\n              children: \"Market Pricing Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pricing_optimization\",\n              children: \"Pricing Optimization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container\",\n        children: results && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: results.graphData,\n            options: {\n              responsive: true,\n              plugins: {\n                title: {\n                  display: true,\n                  text: results.title\n                },\n                legend: {\n                  position: 'top'\n                }\n              },\n              scales: {\n                y: {\n                  type: 'linear',\n                  display: true,\n                  position: 'left'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hGw/DgxNQaSBYvJgRZljkbbUIjw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","Bar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","analysisParams","setAnalysisParams","n_users","multiplier","cost_per_user","infrastructure_scaling","pricing_model","subscription_price","conversion_rate","usage_price","avg_usage_per_user","gdp","population","target_percentile","months","max_users","results","setResults","selectedGraph","setSelectedGraph","handleParamChange","param","value","prev","fetchAnalysis","analysisType","response","fetch","method","headers","body","JSON","stringify","params","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","graphData","options","responsive","plugins","title","display","text","legend","position","scales","y","type","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/JFF-modeling and analysis/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport './App.css';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction App() {\r\n  const [analysisParams, setAnalysisParams] = useState({\r\n    n_users: 1000,\r\n    multiplier: 100,\r\n    cost_per_user: 0.1,\r\n    infrastructure_scaling: 1.2,\r\n    pricing_model: 'freemium',\r\n    subscription_price: 10,\r\n    conversion_rate: 0.05,\r\n    usage_price: 0.01,\r\n    avg_usage_per_user: 100,\r\n    gdp: 1e12,\r\n    population: 1e8,\r\n    target_percentile: 50,\r\n    months: 36,\r\n    max_users: 100000\r\n  });\r\n\r\n  const [results, setResults] = useState(null);\r\n  const [selectedGraph, setSelectedGraph] = useState('cost_structure');\r\n\r\n  const handleParamChange = (param, value) => {\r\n    setAnalysisParams(prev => ({\r\n      ...prev,\r\n      [param]: value\r\n    }));\r\n  };\r\n\r\n  const fetchAnalysis = async (analysisType) => {\r\n    try {\r\n      const response = await fetch('/api/analyze', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          analysisType,\r\n          params: analysisParams\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      setResults(data);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAnalysis(selectedGraph);\r\n  }, [analysisParams, selectedGraph]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Fresco AI Value Analysis</h1>\r\n      \r\n      <div className=\"controls-container\">\r\n        <div className=\"control-group\">\r\n          <h2>Graph Selection</h2>\r\n          <div className=\"input-group\">\r\n            <label>Select Graph Type:</label>\r\n            <select\r\n              value={selectedGraph}\r\n              onChange={(e) => setSelectedGraph(e.target.value)}\r\n            >\r\n              <option value=\"cost_structure\">Cost Structure Analysis</option>\r\n              <option value=\"network_value\">Network Value Growth</option>\r\n              <option value=\"revenue_models\">Revenue Models Comparison</option>\r\n              <option value=\"user_growth\">User Growth Scenarios</option>\r\n              <option value=\"market_pricing\">Market Pricing Analysis</option>\r\n              <option value=\"pricing_optimization\">Pricing Optimization</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Existing parameter controls */}\r\n        \r\n        <div className=\"graph-container\">\r\n          {results && (\r\n            <div className=\"graph\">\r\n              <Line\r\n                data={results.graphData}\r\n                options={{\r\n                  responsive: true,\r\n                  plugins: {\r\n                    title: {\r\n                      display: true,\r\n                      text: results.title\r\n                    },\r\n                    legend: {\r\n                      position: 'top',\r\n                    }\r\n                  },\r\n                  scales: {\r\n                    y: {\r\n                      type: 'linear',\r\n                      display: true,\r\n                      position: 'left',\r\n                    }\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}