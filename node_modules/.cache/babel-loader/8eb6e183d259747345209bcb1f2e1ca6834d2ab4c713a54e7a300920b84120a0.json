{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\JFF-modeling and analysis\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, LogarithmicScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, LogarithmicScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [analysisParams, setAnalysisParams] = useState({\n    // Network Value Parameters\n    network_value_multiplier: 100,\n    n_users: 1000,\n    // AI Cost Parameters\n    base_cost_per_user: 0.1,\n    infrastructure_base: 1000,\n    infrastructure_scaling: 1.2,\n    // Revenue Model Parameters\n    pricing_model: 'freemium',\n    subscription_price: 10,\n    conversion_rate: 0.05,\n    usage_price: 0.01,\n    avg_usage_per_user: 100,\n    // Market Analysis Parameters\n    gdp: 1e12,\n    population: 1e8,\n    target_percentile: 50,\n    price_to_income_ratio: 0.01,\n    shape_parameter: 1.0,\n    // Growth Scenario Parameters\n    max_users: 100000,\n    months: 36\n  });\n  const [selectedGraph, setSelectedGraph] = useState('cost_structure');\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n  const chartRef = React.useRef(null);\n  useEffect(() => {\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n      }\n    };\n  }, [results]);\n  const handleParamChange = (param, value) => {\n    setAnalysisParams(prev => ({\n      ...prev,\n      [param]: value\n    }));\n  };\n  const runAnalysis = async () => {\n    try {\n      setError(null);\n      console.log('Sending analysis request with params:', {\n        analysisType: selectedGraph,\n        params: analysisParams\n      });\n      const response = await fetch('http://localhost:5000/api/analyze', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          analysisType: selectedGraph,\n          params: analysisParams\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('Received data:', data);\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      setResults(data);\n    } catch (error) {\n      console.error('Error in runAnalysis:', error);\n      setError(error.message);\n      setResults(null);\n    }\n  };\n\n  // Add this in the return statement, just before the graph container:\n  {\n    error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this);\n  }\n  const renderInputs = () => {\n    switch (selectedGraph) {\n      case 'network_value':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"params-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Network Value Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Network Value Multiplier:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.network_value_multiplier,\n              onChange: e => handleParamChange('network_value_multiplier', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Number of Users:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.n_users,\n              onChange: e => handleParamChange('n_users', parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this);\n      case 'cost_structure':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"params-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Cost Structure Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Base Cost per User:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: analysisParams.base_cost_per_user,\n              onChange: e => handleParamChange('base_cost_per_user', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Infrastructure Base Cost:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.infrastructure_base,\n              onChange: e => handleParamChange('infrastructure_base', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Infrastructure Scaling:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.1\",\n              value: analysisParams.infrastructure_scaling,\n              onChange: e => handleParamChange('infrastructure_scaling', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this);\n      case 'revenue_models':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"params-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Revenue Model Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Pricing Model:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: analysisParams.pricing_model,\n              onChange: e => handleParamChange('pricing_model', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"freemium\",\n                children: \"Freemium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"subscription\",\n                children: \"Subscription\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"usage_based\",\n                children: \"Usage Based\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"hybrid\",\n                children: \"Hybrid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Subscription Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.subscription_price,\n              onChange: e => handleParamChange('subscription_price', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Conversion Rate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: analysisParams.conversion_rate,\n              onChange: e => handleParamChange('conversion_rate', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Usage Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: analysisParams.usage_price,\n              onChange: e => handleParamChange('usage_price', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Average Usage per User:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.avg_usage_per_user,\n              onChange: e => handleParamChange('avg_usage_per_user', parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this);\n      case 'market_pricing':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"params-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Market Analysis Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"GDP ($):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.gdp,\n              onChange: e => handleParamChange('gdp', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Population:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.population,\n              onChange: e => handleParamChange('population', parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Target Percentile:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"100\",\n              value: analysisParams.target_percentile,\n              onChange: e => handleParamChange('target_percentile', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [analysisParams.target_percentile, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Price to Income Ratio:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.001\",\n              value: analysisParams.price_to_income_ratio,\n              onChange: e => handleParamChange('price_to_income_ratio', parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this);\n      case 'user_growth':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"params-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Growth Scenario Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Maximum Users:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.max_users,\n              onChange: e => handleParamChange('max_users', parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Months:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: analysisParams.months,\n              onChange: e => handleParamChange('months', parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fresco AI Value Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Graph Selection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Graph Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedGraph,\n              onChange: e => setSelectedGraph(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cost_structure\",\n                children: \"Cost Structure Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"network_value\",\n                children: \"Network Value Growth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"revenue_models\",\n                children: \"Revenue Models Comparison\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user_growth\",\n                children: \"User Growth Scenarios\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"market_pricing\",\n                children: \"Market Pricing Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), renderInputs(), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"run-button\",\n          onClick: runAnalysis,\n          children: \"Run Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container\",\n        children: results && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            ref: chartRef,\n            data: {\n              labels: results.graphData.labels,\n              datasets: results.graphData.datasets.map(dataset => ({\n                ...dataset,\n                tension: 0.4,\n                pointRadius: 2,\n                borderWidth: 2\n              }))\n            },\n            options: {\n              responsive: true,\n              maintainAspectRatio: false,\n              plugins: {\n                title: {\n                  display: true,\n                  text: results.title,\n                  font: {\n                    size: 16\n                  }\n                },\n                legend: {\n                  position: 'top',\n                  labels: {\n                    usePointStyle: true\n                  }\n                },\n                tooltip: {\n                  mode: 'index',\n                  intersect: false\n                }\n              },\n              scales: selectedGraph === 'market_pricing' ? {\n                x: {\n                  display: true,\n                  title: {\n                    display: true,\n                    text: 'Target Percentile'\n                  },\n                  grid: {\n                    display: false\n                  }\n                },\n                y: {\n                  type: selectedGraph === 'cost_structure' ? 'logarithmic' : 'linear',\n                  display: true,\n                  position: 'left',\n                  ticks: selectedGraph === 'cost_structure' ? {\n                    callback: function (value) {\n                      return '$' + value.toLocaleString();\n                    }\n                  } : undefined,\n                  title: {\n                    display: true,\n                    text: 'Price ($)'\n                  },\n                  beginAtZero: true\n                },\n                y1: {\n                  type: 'linear',\n                  display: true,\n                  position: 'right',\n                  title: {\n                    display: true,\n                    text: 'Market Size (Users)'\n                  },\n                  beginAtZero: true,\n                  grid: {\n                    drawOnChartArea: false\n                  }\n                }\n              } : {\n                x: {\n                  display: true,\n                  title: {\n                    display: true,\n                    text: selectedGraph === 'user_growth' ? 'Months' : 'Users'\n                  },\n                  grid: {\n                    display: false\n                  },\n                  type: selectedGraph === 'cost_structure' ? 'logarithmic' : 'linear',\n                  ticks: selectedGraph === 'cost_structure' ? {\n                    callback: function (value) {\n                      return value.toLocaleString();\n                    }\n                  } : undefined\n                },\n                y: {\n                  display: true,\n                  position: 'left',\n                  title: {\n                    display: true,\n                    text: selectedGraph === 'cost_structure' ? 'Cost ($)' : selectedGraph === 'network_value' ? 'Value ($)' : selectedGraph === 'revenue_models' ? 'Revenue ($)' : 'Users'\n                  },\n                  beginAtZero: true,\n                  type: selectedGraph === 'cost_structure' ? 'logarithmic' : 'linear'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+x6AtflUqHvJxTiwMFbXFIfEGHI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","Bar","Chart","ChartJS","CategoryScale","LinearScale","LogarithmicScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","analysisParams","setAnalysisParams","network_value_multiplier","n_users","base_cost_per_user","infrastructure_base","infrastructure_scaling","pricing_model","subscription_price","conversion_rate","usage_price","avg_usage_per_user","gdp","population","target_percentile","price_to_income_ratio","shape_parameter","max_users","months","selectedGraph","setSelectedGraph","results","setResults","error","setError","chartRef","useRef","current","destroy","handleParamChange","param","value","prev","runAnalysis","console","log","analysisType","params","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","status","data","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderInputs","type","onChange","e","parseFloat","target","parseInt","step","min","max","onClick","ref","labels","graphData","datasets","map","dataset","tension","pointRadius","borderWidth","options","responsive","maintainAspectRatio","plugins","title","display","font","size","legend","position","usePointStyle","tooltip","mode","intersect","scales","x","grid","y","ticks","callback","toLocaleString","undefined","beginAtZero","y1","drawOnChartArea","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/JFF-modeling and analysis/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  LogarithmicScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport './App.css';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  LogarithmicScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction App() {\r\n  const [analysisParams, setAnalysisParams] = useState({\r\n    // Network Value Parameters\r\n    network_value_multiplier: 100,\r\n    n_users: 1000,\r\n    \r\n    // AI Cost Parameters\r\n    base_cost_per_user: 0.1,\r\n    infrastructure_base: 1000,\r\n    infrastructure_scaling: 1.2,\r\n    \r\n    // Revenue Model Parameters\r\n    pricing_model: 'freemium',\r\n    subscription_price: 10,\r\n    conversion_rate: 0.05,\r\n    usage_price: 0.01,\r\n    avg_usage_per_user: 100,\r\n    \r\n    // Market Analysis Parameters\r\n    gdp: 1e12,\r\n    population: 1e8,\r\n    target_percentile: 50,\r\n    price_to_income_ratio: 0.01,\r\n    shape_parameter: 1.0,\r\n    \r\n    // Growth Scenario Parameters\r\n    max_users: 100000,\r\n    months: 36\r\n  });\r\n\r\n  const [selectedGraph, setSelectedGraph] = useState('cost_structure');\r\n  const [results, setResults] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const chartRef = React.useRef(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.destroy();\r\n      }\r\n    };\r\n  }, [results]);\r\n\r\n  const handleParamChange = (param, value) => {\r\n    setAnalysisParams(prev => ({\r\n      ...prev,\r\n      [param]: value\r\n    }));\r\n  };\r\n\r\n  const runAnalysis = async () => {\r\n    try {\r\n        setError(null);\r\n        console.log('Sending analysis request with params:', {\r\n            analysisType: selectedGraph,\r\n            params: analysisParams\r\n        });\r\n        \r\n        const response = await fetch('http://localhost:5000/api/analyze', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                analysisType: selectedGraph,\r\n                params: analysisParams\r\n            }),\r\n        });\r\n        \r\n        if (!response.ok) {\r\n            const errorText = await response.text();\r\n            throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('Received data:', data);\r\n        \r\n        if (data.error) {\r\n            throw new Error(data.error);\r\n        }\r\n        setResults(data);\r\n    } catch (error) {\r\n        console.error('Error in runAnalysis:', error);\r\n        setError(error.message);\r\n        setResults(null);\r\n    }\r\n};\r\n\r\n  // Add this in the return statement, just before the graph container:\r\n  {error && (\r\n    <div className=\"error-message\">\r\n      Error: {error}\r\n    </div>\r\n  )}\r\n\r\n  const renderInputs = () => {\r\n    switch (selectedGraph) {\r\n      case 'network_value':\r\n        return (\r\n          <div className=\"params-group\">\r\n            <h3>Network Value Parameters</h3>\r\n            <div className=\"input-group\">\r\n              <label>Network Value Multiplier:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.network_value_multiplier}\r\n                onChange={(e) => handleParamChange('network_value_multiplier', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Number of Users:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.n_users}\r\n                onChange={(e) => handleParamChange('n_users', parseInt(e.target.value))}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'cost_structure':\r\n        return (\r\n          <div className=\"params-group\">\r\n            <h3>Cost Structure Parameters</h3>\r\n            <div className=\"input-group\">\r\n              <label>Base Cost per User:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={analysisParams.base_cost_per_user}\r\n                onChange={(e) => handleParamChange('base_cost_per_user', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Infrastructure Base Cost:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.infrastructure_base}\r\n                onChange={(e) => handleParamChange('infrastructure_base', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Infrastructure Scaling:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.1\"\r\n                value={analysisParams.infrastructure_scaling}\r\n                onChange={(e) => handleParamChange('infrastructure_scaling', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'revenue_models':\r\n        return (\r\n          <div className=\"params-group\">\r\n            <h3>Revenue Model Parameters</h3>\r\n            <div className=\"input-group\">\r\n              <label>Pricing Model:</label>\r\n              <select\r\n                value={analysisParams.pricing_model}\r\n                onChange={(e) => handleParamChange('pricing_model', e.target.value)}\r\n              >\r\n                <option value=\"freemium\">Freemium</option>\r\n                <option value=\"subscription\">Subscription</option>\r\n                <option value=\"usage_based\">Usage Based</option>\r\n                <option value=\"hybrid\">Hybrid</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Subscription Price:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.subscription_price}\r\n                onChange={(e) => handleParamChange('subscription_price', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Conversion Rate:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={analysisParams.conversion_rate}\r\n                onChange={(e) => handleParamChange('conversion_rate', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Usage Price:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={analysisParams.usage_price}\r\n                onChange={(e) => handleParamChange('usage_price', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Average Usage per User:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.avg_usage_per_user}\r\n                onChange={(e) => handleParamChange('avg_usage_per_user', parseInt(e.target.value))}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'market_pricing':\r\n        return (\r\n          <div className=\"params-group\">\r\n            <h3>Market Analysis Parameters</h3>\r\n            <div className=\"input-group\">\r\n              <label>GDP ($):</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.gdp}\r\n                onChange={(e) => handleParamChange('gdp', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Population:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.population}\r\n                onChange={(e) => handleParamChange('population', parseInt(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Target Percentile:</label>\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                value={analysisParams.target_percentile}\r\n                onChange={(e) => handleParamChange('target_percentile', parseFloat(e.target.value))}\r\n              />\r\n              <span>{analysisParams.target_percentile}%</span>\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Price to Income Ratio:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.001\"\r\n                value={analysisParams.price_to_income_ratio}\r\n                onChange={(e) => handleParamChange('price_to_income_ratio', parseFloat(e.target.value))}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'user_growth':\r\n        return (\r\n          <div className=\"params-group\">\r\n            <h3>Growth Scenario Parameters</h3>\r\n            <div className=\"input-group\">\r\n              <label>Maximum Users:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.max_users}\r\n                onChange={(e) => handleParamChange('max_users', parseInt(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Months:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={analysisParams.months}\r\n                onChange={(e) => handleParamChange('months', parseInt(e.target.value))}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Fresco AI Value Analysis</h1>\r\n      \r\n      <div className=\"main-container\">\r\n        <div className=\"controls-container\">\r\n          <div className=\"control-group\">\r\n            <h2>Graph Selection</h2>\r\n            <div className=\"input-group\">\r\n              <label>Select Graph Type:</label>\r\n              <select\r\n                value={selectedGraph}\r\n                onChange={(e) => setSelectedGraph(e.target.value)}\r\n              >\r\n                <option value=\"cost_structure\">Cost Structure Analysis</option>\r\n                <option value=\"network_value\">Network Value Growth</option>\r\n                <option value=\"revenue_models\">Revenue Models Comparison</option>\r\n                <option value=\"user_growth\">User Growth Scenarios</option>\r\n                <option value=\"market_pricing\">Market Pricing Analysis</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {renderInputs()}\r\n\r\n          <button className=\"run-button\" onClick={runAnalysis}>Run Analysis</button>\r\n        </div>\r\n\r\n        <div className=\"graph-container\">\r\n          {results && (\r\n            <div className=\"graph\">\r\n              <Line\r\n                ref={chartRef}\r\n                data={{\r\n                  labels: results.graphData.labels,\r\n                  datasets: results.graphData.datasets.map(dataset => ({\r\n                    ...dataset,\r\n                    tension: 0.4,\r\n                    pointRadius: 2,\r\n                    borderWidth: 2,\r\n                  }))\r\n                }}\r\n                options={{\r\n                  responsive: true,\r\n                  maintainAspectRatio: false,\r\n                  plugins: {\r\n                    title: {\r\n                      display: true,\r\n                      text: results.title,\r\n                      font: { size: 16 }\r\n                    },\r\n                    legend: {\r\n                      position: 'top',\r\n                      labels: { usePointStyle: true }\r\n                    },\r\n                    tooltip: {\r\n                      mode: 'index',\r\n                      intersect: false\r\n                    }\r\n                  },\r\n                  scales: selectedGraph === 'market_pricing' ? {\r\n                    x: {\r\n                      display: true,\r\n                      title: {\r\n                        display: true,\r\n                        text: 'Target Percentile'\r\n                      },\r\n                      grid: { display: false }\r\n                    },\r\n                    y: {\r\n                      type: selectedGraph === 'cost_structure' ? 'logarithmic' : 'linear',\r\n                      display: true,\r\n                      position: 'left',\r\n                      ticks: selectedGraph === 'cost_structure' ? {\r\n                        callback: function(value) {\r\n                          return '$' + value.toLocaleString();\r\n                        }\r\n                      } : undefined,\r\n                      title: {\r\n                        display: true,\r\n                        text: 'Price ($)'\r\n                      },\r\n                      beginAtZero: true\r\n                    },\r\n                    y1: {\r\n                      type: 'linear',\r\n                      display: true,\r\n                      position: 'right',\r\n                      title: {\r\n                        display: true,\r\n                        text: 'Market Size (Users)'\r\n                      },\r\n                      beginAtZero: true,\r\n                      grid: {\r\n                        drawOnChartArea: false\r\n                      }\r\n                    }\r\n                  } : {\r\n                    x: {\r\n                      display: true,\r\n                      title: {\r\n                        display: true,\r\n                        text: selectedGraph === 'user_growth' ? 'Months' : 'Users'\r\n                      },\r\n                      grid: { display: false },\r\n                      type: selectedGraph === 'cost_structure' ? 'logarithmic' : 'linear',\r\n                      ticks: selectedGraph === 'cost_structure' ? {\r\n                        callback: function(value) {\r\n                          return value.toLocaleString();\r\n                        }\r\n                      } : undefined\r\n                    },\r\n                    y: {\r\n                      display: true,\r\n                      position: 'left',\r\n                      title: {\r\n                        display: true,\r\n                        text: selectedGraph === 'cost_structure' ? 'Cost ($)' : \r\n                              selectedGraph === 'network_value' ? 'Value ($)' : \r\n                              selectedGraph === 'revenue_models' ? 'Revenue ($)' : \r\n                              'Users'\r\n                      },\r\n                      beginAtZero: true,\r\n                      type: selectedGraph === 'cost_structure' ? 'logarithmic' : 'linear'\r\n                    }\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}