{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\JFF-modeling and analysis\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _results$recommended_, _results$target_incom, _results$market_size, _results$potential_re, _results$price_elasti;\n  const [analysisParams, setAnalysisParams] = useState({\n    n_users: 1000,\n    multiplier: 100,\n    cost_per_user: 0.1,\n    infrastructure_scaling: 1.2,\n    pricing_model: 'freemium',\n    subscription_price: 10,\n    conversion_rate: 0.05,\n    usage_price: 0.01,\n    avg_usage_per_user: 100,\n    gdp: 1e12,\n    population: 1e8,\n    target_percentile: 50\n  });\n  const [results, setResults] = useState(null);\n  const handleParamChange = (param, value) => {\n    setAnalysisParams(prev => ({\n      ...prev,\n      [param]: value\n    }));\n  };\n  const fetchAnalysis = async analysisType => {\n    try {\n      const response = await fetch('/api/analyze', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          analysisType,\n          params: analysisParams\n        })\n      });\n      const data = await response.json();\n      setResults(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAnalysis('market_pricing');\n  }, [analysisParams]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fresco AI Value Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Market Parameters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"GDP ($):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: analysisParams.gdp,\n            onChange: e => handleParamChange('gdp', parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Population:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: analysisParams.population,\n            onChange: e => handleParamChange('population', parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Target Percentile:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"100\",\n            value: analysisParams.target_percentile,\n            onChange: e => handleParamChange('target_percentile', parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [analysisParams.target_percentile, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pricing Parameters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Pricing Model:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: analysisParams.pricing_model,\n            onChange: e => handleParamChange('pricing_model', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"freemium\",\n              children: \"Freemium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"subscription\",\n              children: \"Subscription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"usage_based\",\n              children: \"Usage Based\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hybrid\",\n              children: \"Hybrid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Subscription Price ($):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: analysisParams.subscription_price,\n            onChange: e => handleParamChange('subscription_price', parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Conversion Rate (%):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"20\",\n            value: analysisParams.conversion_rate * 100,\n            onChange: e => handleParamChange('conversion_rate', parseFloat(e.target.value) / 100)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [(analysisParams.conversion_rate * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Market Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Recommended Price: $\", (_results$recommended_ = results.recommended_price) === null || _results$recommended_ === void 0 ? void 0 : _results$recommended_.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Target Income Level: $\", (_results$target_incom = results.target_income_level) === null || _results$target_incom === void 0 ? void 0 : _results$target_incom.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Market Size: \", (_results$market_size = results.market_size) === null || _results$market_size === void 0 ? void 0 : _results$market_size.toLocaleString(), \" users\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Potential Revenue: $\", (_results$potential_re = results.potential_revenue) === null || _results$potential_re === void 0 ? void 0 : _results$potential_re.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price Elasticity: \", (_results$price_elasti = results.price_elasticity) === null || _results$price_elasti === void 0 ? void 0 : _results$price_elasti.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q0auearNJrt0aplCVGRNALvi8ec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","jsxDEV","_jsxDEV","App","_s","_results$recommended_","_results$target_incom","_results$market_size","_results$potential_re","_results$price_elasti","analysisParams","setAnalysisParams","n_users","multiplier","cost_per_user","infrastructure_scaling","pricing_model","subscription_price","conversion_rate","usage_price","avg_usage_per_user","gdp","population","target_percentile","results","setResults","handleParamChange","param","value","prev","fetchAnalysis","analysisType","response","fetch","method","headers","body","JSON","stringify","params","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","parseFloat","target","parseInt","min","max","toFixed","recommended_price","target_income_level","market_size","toLocaleString","potential_revenue","price_elasticity","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/JFF-modeling and analysis/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [analysisParams, setAnalysisParams] = useState({\r\n    n_users: 1000,\r\n    multiplier: 100,\r\n    cost_per_user: 0.1,\r\n    infrastructure_scaling: 1.2,\r\n    pricing_model: 'freemium',\r\n    subscription_price: 10,\r\n    conversion_rate: 0.05,\r\n    usage_price: 0.01,\r\n    avg_usage_per_user: 100,\r\n    gdp: 1e12,\r\n    population: 1e8,\r\n    target_percentile: 50\r\n  });\r\n\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleParamChange = (param, value) => {\r\n    setAnalysisParams(prev => ({\r\n      ...prev,\r\n      [param]: value\r\n    }));\r\n  };\r\n\r\n  const fetchAnalysis = async (analysisType) => {\r\n    try {\r\n      const response = await fetch('/api/analyze', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          analysisType,\r\n          params: analysisParams\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      setResults(data);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAnalysis('market_pricing');\r\n  }, [analysisParams]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Fresco AI Value Analysis</h1>\r\n      \r\n      <div className=\"controls-container\">\r\n        <div className=\"control-group\">\r\n          <h2>Market Parameters</h2>\r\n          <div className=\"input-group\">\r\n            <label>GDP ($):</label>\r\n            <input\r\n              type=\"number\"\r\n              value={analysisParams.gdp}\r\n              onChange={(e) => handleParamChange('gdp', parseFloat(e.target.value))}\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Population:</label>\r\n            <input\r\n              type=\"number\"\r\n              value={analysisParams.population}\r\n              onChange={(e) => handleParamChange('population', parseInt(e.target.value))}\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Target Percentile:</label>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value={analysisParams.target_percentile}\r\n              onChange={(e) => handleParamChange('target_percentile', parseFloat(e.target.value))}\r\n            />\r\n            <span>{analysisParams.target_percentile}%</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"control-group\">\r\n          <h2>Pricing Parameters</h2>\r\n          <div className=\"input-group\">\r\n            <label>Pricing Model:</label>\r\n            <select\r\n              value={analysisParams.pricing_model}\r\n              onChange={(e) => handleParamChange('pricing_model', e.target.value)}\r\n            >\r\n              <option value=\"freemium\">Freemium</option>\r\n              <option value=\"subscription\">Subscription</option>\r\n              <option value=\"usage_based\">Usage Based</option>\r\n              <option value=\"hybrid\">Hybrid</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Subscription Price ($):</label>\r\n            <input\r\n              type=\"number\"\r\n              value={analysisParams.subscription_price}\r\n              onChange={(e) => handleParamChange('subscription_price', parseFloat(e.target.value))}\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Conversion Rate (%):</label>\r\n            <input\r\n              type=\"range\"\r\n              min=\"1\"\r\n              max=\"20\"\r\n              value={analysisParams.conversion_rate * 100}\r\n              onChange={(e) => handleParamChange('conversion_rate', parseFloat(e.target.value) / 100)}\r\n            />\r\n            <span>{(analysisParams.conversion_rate * 100).toFixed(1)}%</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {results && (\r\n        <div className=\"results-container\">\r\n          <div className=\"result-card\">\r\n            <h3>Market Analysis</h3>\r\n            <p>Recommended Price: ${results.recommended_price?.toFixed(2)}</p>\r\n            <p>Target Income Level: ${results.target_income_level?.toFixed(2)}</p>\r\n            <p>Market Size: {results.market_size?.toLocaleString()} users</p>\r\n            <p>Potential Revenue: ${results.potential_revenue?.toFixed(2)}</p>\r\n            <p>Price Elasticity: {results.price_elasticity?.toFixed(2)}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}